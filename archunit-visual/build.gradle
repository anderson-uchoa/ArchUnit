plugins {
    id "com.moowork.node" version "1.1.1"
}

dependencies {
    compile project(path: ':archunit', configuration: 'shadow')
    compile dependency.guava
    compile dependency.gson

    testCompile dependency.log4j_api
    testCompile dependency.log4j_core
    testCompile dependency.log4j_slf4j
    testCompile dependency.junit
    testCompile dependency.mockito
    testCompile dependency.assertj
    testCompile(dependency.assertj_guava) {
        exclude module: 'assertj-core'
        exclude module: 'guava'
    }
    testCompile dependency.junit_dataprovider
    testCompile project(path: ':archunit', configuration: 'tests')
}

/* We only depend on archunit core and nothing else */
install.repositories.mavenInstaller.pom.whenConfigured { pom ->
    pom.dependencies.removeAll {
        it.artifactId != 'archunit' || it.scope != 'compile'
    }
}

configurations {
    /* Exclude archunit from the shadow jar */
    runtime.exclude module: ':archunit'
}

def nodeVersion = '7.2.0'
def nodeDir = "${project.projectDir}/nodejs"

node {
    version = nodeVersion
    npmVersion = '4.0.2'
    distBaseUrl = 'https://nodejs.org/dist'
    download = true
    workDir = file(nodeDir)
}

task setupNode(dependsOn: ['npmInstall']) {
    doLast {
        def subFolder = file(nodeDir).list().grep { it.contains(nodeVersion) }[0]
        println """
            >> Setting up NodeJs and running npm install...
            >> To run node from the command line, add the nodejs bin folder to your PATH:
            >> export PATH="${project.projectDir}/nodejs/${subFolder}/bin:\$PATH"
            """.stripIndent()
    }
}

task cleanNode(type: Delete) {
    delete 'nodejs', 'node_modules', 'bower_components'
}

task cleanAll(dependsOn: [clean, cleanNode])

task mocha(type: NodeTask, dependsOn: 'setupNode') {
    script = file('./node_modules/mocha/bin/mocha')
    args = ['--reporter', 'spec', 'src/test/app/report/**/*.js']
}

task runBower(type: NpmTask, dependsOn: 'setupNode') {
    args = ['run', 'bower']
}

def reportOutputDir = "${sourceSets.main.output.resourcesDir}/com/tngtech/archunit/visual/report"

task createReportDir {
    doFirst {
        file(reportOutputDir).mkdirs()
    }
}

task copyStatic(type: Copy, dependsOn: createReportDir) {
    from 'src/main/app/report'
    include '*.html', '*.css'
    into reportOutputDir
}

task copyJsLibs(type: Copy, dependsOn: ['createReportDir', 'runBower']) {
    from 'src/main/app/report/lib'
    from 'node_modules/d3/build'
    from 'bower_components/webcomponentsjs'
    include 'd3.js'
    include 'jscolor.js'
    include 'webcomponents-hi-sd-ce.js'
    into "${reportOutputDir}/lib"
}

task browserify(type: NodeTask, dependsOn: ['setupNode', 'createReportDir']) {
    script = file('./node_modules/browserify/bin/cmd.js')
    args = ['-r', './src/main/app/report/visualization.js:visualization', '-o', "${reportOutputDir}/visualization-bundle.js"]
}

task buildReport(dependsOn: ['copyStatic', 'copyJsLibs', 'mocha', 'browserify']) {}

jar.dependsOn buildReport